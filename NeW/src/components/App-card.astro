---
interface Props {
  name: string;
  id: string;
  lang: string;
}

import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

const { name, id, lang } = Astro.props;

import { getEntry } from "astro:content";
const app = await getEntry("apps", `${lang}/${name}`);
const links = await getEntry("links", name);

const strings = await getEntry("strings", `${lang}/strings`);
---

<div class="app-card" id={id}>
  <h2>{app?.data.title}</h2>
  <Image src={app?.data.img} alt=`${app?.data.title} screenshot` />
  <div class="links">
    <a href={links?.data.play} target="_blank"
      ><Icon name="store_badge" width={120} height={35} /></a
    >
    <a href={links?.data.fdroid} target="_blank"
      ><Icon name="fdroid_badge" width={120} height={35} /></a
    >
    <a href={links?.data.github} target="_blank"
      ><Icon name="github_badge" width={120} height={35} /></a
    >
  </div>
  <div class="open-dialog-btn">
    <button id={`open-dialog-${id}`}>{strings?.data.products.label}</button>
  </div>
  <dialog id={`dialog-${id}`}>
    <div>
      <div class="general">
        <p>
          {app?.data.description}
        </p>
      </div>

      <div class="features">
        <h3>{app?.data.featuresTitle}</h3>
        <ul>
          {app?.data.features.map((feature) => <li>{feature}</li>)}
        </ul>
      </div>
      <button id={`close-dialog-${id}`} autofocus
        >{strings?.data.products.close}</button
      >
    </div>
  </dialog>
</div>

<script>
  const apps = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].map((item) => {
    const id = `app-${item}`;
    return {
      dialog: document.getElementById(`dialog-${id}`),
      close: document.getElementById(`close-dialog-${id}`),
      open: document.getElementById(`open-dialog-${id}`),
    };
  });

  apps.forEach((app) => {
    app.open?.addEventListener("click", () => {
      app.dialog?.showModal();
    });
    app.close?.addEventListener("click", () => {
      app.dialog?.close();
    });
  });
</script>

<style>
  .app-card {
    scroll-snap-align: center;
    display: grid;
    grid-template-columns: 20em;
    gap: 1rem;
    position: relative;
    align-content: start;
    place-items: center;
  }

  .app-card > h2 {
    font-size: var(--fs-sm);
    font-weight: 600;
    text-align: center;
    text-transform: capitalize;
  }

  .app-card > img {
    max-width: auto;
    height: 500px;
    object-fit: contain;
    border-radius: 0.5rem;
  }

  .links {
    display: grid;
    align-items: center;
    gap: 0.5rem;
    grid-auto-flow: column;
  }

  [data-icon="fdroid_badge"] {
    color: black;
  }

  [data-icon="github_badge"] {
    color: black;
  }

  .open-dialog-btn {
    display: none;
  }

  .open-dialog-btn {
    display: block;
    place-self: center;
    width: 100%;
  }

  .open-dialog-btn > button {
    background-color: var(--primary-container);
    color: var(--on-primary-container);
    border: solid 1px var(--outline-variant);
    border-radius: 0.5rem;
    width: 100%;
    padding-block: 0.5rem;
    cursor: pointer;
  }

  dialog {
    position: fixed;
    width: max-content;
    inset: 0;
    margin: auto;
    padding: 3rem;
    border: solid 1px var(--outline);
    background-color: var(--surface-container);
    border-radius: 0.5rem;
  }

  dialog > div {
    display: grid;
    place-content: center;
    gap: 1rem;
  }

  dialog button {
    margin-block-start: 1rem;
    background: var(--primary-container);
    color: var(--on-primary-container);
    padding-inline: 1rem;
    padding-block: 0.2rem;
    border: solid 1px var(--outline-variant);
    border-radius: 0.5rem;
    cursor: pointer;
    justify-self: end;
  }

  .general,
  .features {
    display: grid;
    gap: 1rem;
  }

  .general > p {
    max-width: 20ch;
    text-align: justify;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
  }

  .general > h2 {
    font-size: var(--fs-sm);
    font-weight: 600;
    text-align: center;
    text-transform: capitalize;
  }

  .features > h3 {
    font-weight: 600;
    text-align: start;
  }

  .features > ul {
    display: grid;
    text-align: start;
    padding-inline-start: 1rem;
    max-width: 20ch;
  }

  @media (width > 480px) {
    .general > p {
      max-width: 45ch;
    }

    .features > ul {
      max-width: 45ch;
    }
  }
</style>
